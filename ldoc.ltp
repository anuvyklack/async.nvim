> local lev = ldoc.level or 2
> local lev1 = ('#'):rep(lev)
> local lev2 = ('#'):rep(lev+1)
> local lev3 = ('#'):rep(lev+2)
> local iter = ldoc.modules.iter
> local function M(txt,item)
>   return ldoc.markup(txt,item,ldoc.plain)
> end

# $(module.name)

$(module.summary)

> for kind, items in module.kinds() do
$(lev1) $(kind)

>   local kitem = module.kinds:get_item(kind)
>   if kitem then
$(lev1) $(ldoc.description(kitem))

>   end
>   for item in items() do
$(lev2) `$(ldoc.display_name(item))`

$(ldoc.descript(item))

>     if item.params and #item.params > 0 then
>       local subnames = module.kinds:type_of(item).subnames
>       if subnames then
$(lev3) $(subnames):

>       end
>       for parm in iter(item.params) do
>         local param,sublist = item:subparam(parm)
>         if sublist then
        DDD $(sublist) $(M(item.params.map[sublist],item))
>         end
>         for p in iter(param) do
>           local name = item:display_name_of(p)
>           local tp = item:type_of_param(p)
>           local tps = tp == '' and '' or ' (`'..tp..'`)'
* `$(name)`$(tps): $(M(item.params.map[p],item))
>         end
>       end -- for
>     end -- if params

---
>   end
> end
